detect:
  name: detect
  runs-on: ubuntu-latest
  steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🕵️‍♀️ Scan for Debug Keywords
      run: |
        echo "🔍 Detect 'console.log' or 'print' statements..."
        
        # 1️⃣ Add UI description like Lint
        echo "" >> "$GITHUB_STEP_SUMMARY"
        echo "#### Detect 'console.log' or 'print'" >> "$GITHUB_STEP_SUMMARY"
        echo "" >> "$GITHUB_STEP_SUMMARY"
        echo "This workflow checks for debug statements in:" >> "$GITHUB_STEP_SUMMARY"
        echo "- JavaScript (console.log)" >> "$GITHUB_STEP_SUMMARY"
        echo "- Python (print)" >> "$GITHUB_STEP_SUMMARY"
        echo "" >> "$GITHUB_STEP_SUMMARY"

        FILE_PATHS=$(find . -type f \( -name "*.js" -o -name "*.py" \))
        hit_flag=0
        js_flag=0
        py_flag=0

        mkdir -p keyword-scan-output
        REPORT_FILE=keyword-scan-output/keyword-scan-report.md
        echo "## 🔎 Keyword Scan Report" > "$REPORT_FILE"

        format_path() {
          clean_path="${1#./}"
          if [[ "$clean_path" == */* ]]; then
            echo "🗂️ _${clean_path}_"
          else
            echo "📄 _${clean_path}_"
          fi
        }

        while IFS= read -r path; do
          if [[ -f "$path" ]]; then
            if [[ "$path" == *.js ]]; then
              results=$(grep -Hn "console\.log" "$path" || true)
              if [[ -n "$results" ]]; then
                if [[ "$js_flag" -eq 0 ]]; then
                  echo "**console.log found in:**" >> "$REPORT_FILE"
                  js_flag=1
                fi
                format_path "$path" >> "$REPORT_FILE"
                echo '```js' >> "$REPORT_FILE"
                echo "$results" | sed -E "s|$path:||" >> "$REPORT_FILE"
                echo '```' >> "$REPORT_FILE"
                hit_flag=1
              fi
            elif [[ "$path" == *.py ]]; then
              results=$(grep -Hn "print" "$path" || true)
              if [[ -n "$results" ]]; then
                if [[ "$py_flag" -eq 0 ]]; then
                  echo -e "\n**print found in:**" >> "$REPORT_FILE"
                  py_flag=1
                fi
                format_path "$path" >> "$REPORT_FILE"
                echo '```py' >> "$REPORT_FILE"
                echo "$results" | sed -E "s|$path:||" >> "$REPORT_FILE"
                echo '```' >> "$REPORT_FILE"
                hit_flag=1
              fi
            fi
          fi
        done <<< "$FILE_PATHS"

        # 2️⃣ DO NOT exit 1 to avoid annotation
        if [[ "$hit_flag" -eq 1 ]]; then
          echo "❌ Detected disallowed keywords." >> "$GITHUB_STEP_SUMMARY"
          cat "$REPORT_FILE" >> "$GITHUB_STEP_SUMMARY"
        else
          echo "✅ No disallowed keywords found." >> "$GITHUB_STEP_SUMMARY"
          echo -e "\n✅ No disallowed keywords found." | tee -a "$REPORT_FILE" >> "$GITHUB_STEP_SUMMARY"
        fi

    - name: 📦 Upload keyword scan report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: keyword-scan-report
        path: keyword-scan-output/
