name: Detect Keywords in Repo

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  detect-keywords:
    name: Detect `console.log` or `print`
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🗂️ Print repo structure
        run: tree -L 3 || echo "tree not available"

      - name: 🕵️‍♀️ Scan Entire Repo for Debug Keywords
        run: |
          echo "🔍 Scanning entire repo for debug keywords..."

          hit_flag=0
          js_files=()
          py_files=()

          # Format path with folder or file icon, strip leading './'
          format_path() {
            local path="${1#./}"
            if [[ "$path" == */* ]]; then
              echo "🗂️ _$path_"
            else
              echo "📄 _$path_"
            fi
          }

          # Find all .js and .py files
          while IFS= read -r file; do
            [[ "$file" == *.js ]] && js_files+=("$file")
            [[ "$file" == *.py ]] && py_files+=("$file")
          done < <(find . -type f \( -name "*.js" -o -name "*.py" \) | sort)

          echo "## 🔎 Keyword Scan Report" >> $GITHUB_STEP_SUMMARY

          # JS files
          js_flag=0
          if [[ ${#js_files[@]} -gt 0 ]]; then
            for file in "${js_files[@]}"; do
              results=$(grep -Hn "console\.log" "$file" || true)
              if [[ -n "$results" ]]; then
                if [[ "$js_flag" -eq 0 ]]; then
                  echo -e "**console.log found in:**" >> $GITHUB_STEP_SUMMARY
                  js_flag=1
                fi
                formatted_path=$(format_path "$file")
                echo -e "\n$formatted_path" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                echo "$results" | sed -E "s|$file:||" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                hit_flag=1
              fi
            done
          fi

          # Python files
          py_flag=0
          if [[ ${#py_files[@]} -gt 0 ]]; then
            for file in "${py_files[@]}"; do
              results=$(grep -Hn "print" "$file" || true)
              if [[ -n "$results" ]]; then
                if [[ "$py_flag" -eq 0 ]]; then
                  echo -e "\n**print found in:**" >> $GITHUB_STEP_SUMMARY
                  py_flag=1
                fi
                formatted_path=$(format_path "$file")
                echo -e "\n$formatted_path" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                echo "$results" | sed -E "s|$file:||" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                hit_flag=1
              fi
            done
          fi

          if [[ "$hit_flag" -eq 1 ]]; then
            echo "❌ Detected disallowed keywords."
            exit 1
          else
            echo "✅ No disallowed keywords found."
            echo -e "\n✅ No disallowed keywords found." >> $GITHUB_STEP_SUMMARY
          fi
