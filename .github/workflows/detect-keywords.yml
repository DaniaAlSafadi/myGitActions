name: Detect Keywords in Files

on:
  push:
    paths:
      - 'API-Build/**'
      - 'Calculator_module.py'
  pull_request:
    paths:
      - 'API-Build/**'
      - 'Calculator_module.py'
  workflow_dispatch:

jobs:
  detect-keywords:
    name: üïµÔ∏è‚Äç‚ôÄÔ∏è Detect `console.log` or `print`
    runs-on: ubuntu-latest

    env:
      FILE_PATHS: |
        API-Build
        Calculator_module.py

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üïµÔ∏è‚Äç‚ôÄÔ∏è Scan Entire Repo for Debug Keywords
        run: |
          echo "üîç Scanning entire repo for debug keywords..."

          hit_flag=0
          js_files=()
          py_files=()

          # Find all .js and .py files
          while IFS= read -r file; do
           [[ "$file" == *.js ]] && js_files+=("$file")
           [[ "$file" == *.py ]] && py_files+=("$file")
          done < <(find $FILE_PATHS -type f \( -name "*.js" -o -name "*.py" \) 2>/dev/null | sort)

          echo "## üîé Keyword Scan Report" >> $GITHUB_STEP_SUMMARY

          # Function to add icon based on path
          format_path() {
           if [[ "$1" == */*/* ]]; then
            echo "üóÇÔ∏è _${1}_"
          else
           echo "üìÑ _${1}_"
          fi
          }

          # JS files
          js_flag=0
          if [[ ${#js_files[@]} -gt 0 ]]; then
            for file in "${js_files[@]}"; do
              results=$(grep -Hn "console\.log" "$file" || true)
              if [[ -n "$results" ]]; then
                if [[ "$js_flag" -eq 0 ]]; then
                  echo -e "**console.log found in:**" >> $GITHUB_STEP_SUMMARY
                  js_flag=1
                fi
                formatted_path=$(format_path "$file")
                echo -e "\n$formatted_path" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                echo "$results" | sed -E "s|$file:||" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                hit_flag=1
              fi
            done
          fi

          # Python files
          py_flag=0
          if [[ ${#py_files[@]} -gt 0 ]]; then
            for file in "${py_files[@]}"; do
              results=$(grep -Hn "print" "$file" || true)
              if [[ -n "$results" ]]; then
                if [[ "$py_flag" -eq 0 ]]; then
                  echo -e "\n**print found in:**" >> $GITHUB_STEP_SUMMARY
                  py_flag=1
                fi
                formatted_path=$(format_path "$file")
                echo -e "\n$formatted_path" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                echo "$results" | sed -E "s|$file:||" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                hit_flag=1
              fi
            done
          fi

          if [[ "$hit_flag" -eq 1 ]]; then
            echo "‚ùå Detected disallowed keywords."
            exit 1
          else
            echo "‚úÖ No disallowed keywords found."
            echo -e "\n‚úÖ No disallowed keywords found." >> $GITHUB_STEP_SUMMARY
          fi
