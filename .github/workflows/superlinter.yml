name: Super-Linter

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write
  security-events: write

jobs:
  super-lint:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧹 Prepare Super-Linter output folder
        run: mkdir -p super-linter-output

      - name: 🧹 Run Super-Linter
        uses: github/super-linter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_JSON: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_JAVASCRIPT_STANDARD: true
          OUTPUT_FORMAT: sarif
          OUTPUT_FILE: super-linter-output/results.sarif
          CREATE_LOG_FILE: true
          LOG_LEVEL: VERBOSE

      - name: 📝 Parse and Display Linter Errors
        if: always()
        run: |
          echo "### Code Style Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "This workflow checks code formatting for:" >> "$GITHUB_STEP_SUMMARY"
          echo "- Python (Black, Pylint)" >> "$GITHUB_STEP_SUMMARY"
          echo "- JavaScript" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

          echo "#### Linter Errors" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"

          SARIF_FILE="super-linter-output/results.sarif"
          if [ -f "$SARIF_FILE" ]; then
            # Extract only errors/warnings from SARIF
            jq -r '.runs[]?.results[]? | "\(.locations[0].physicalLocation.artifactLocation.uri):\(.locations[0].physicalLocation.region.startLine):\(.locations[0].physicalLocation.region.startColumn): \(.message.text) (\(.ruleId))"' "$SARIF_FILE" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "ℹ️ No SARIF file found" >> "$GITHUB_STEP_SUMMARY"
          fi

          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "Job summary generated at run-time" >> "$GITHUB_STEP_SUMMARY"

      - name: 📊 Upload SARIF report to GitHub Code Scanning
        if: always() && hashFiles('super-linter-output/results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: super-linter-output/results.sarif

      - name: 📦 Upload Super-Linter Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: super-linter-logs
          path: |
            super-linter-output/
            *.log
          if-no-files-found: ignore
