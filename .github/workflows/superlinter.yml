name: Super-Linter
on:
  push:
 #   paths:
 #     - '.github/workflows/superlinter.yml'
 #     - 'library/books.json'
 #     - 'API-Build/routes/subscribers.js'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  super-lint:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📁 Print repo structure
        run: tree -L 3 || echo "tree not installed"

      - name: 📄 List all checked out files
        run: find . -type f

      - name: 🧹 Run Super-Linter with Direct Output Capture
        continue-on-error: true
        run: |
          # Run Super-Linter using Docker directly to capture all output
          docker run --rm \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -e VALIDATE_ALL_CODEBASE=true \
            -e VALIDATE_JSON=true \
            -e VALIDATE_PYTHON_BLACK=true \
            -e VALIDATE_PYTHON_PYLINT=true \
            -e VALIDATE_JAVASCRIPT_STANDARD=true \
            -e DEFAULT_BRANCH=main \
            -v "${{ github.workspace }}":/tmp/lint \
            ghcr.io/super-linter/super-linter:v5.7.2 > full_output.log 2>&1 || true
          
          echo "### Code Style Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "This workflow checks code formatting for:" >> "$GITHUB_STEP_SUMMARY"
          echo "- Python (Black, Pylint)" >> "$GITHUB_STEP_SUMMARY"
          echo "- JavaScript" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "#### Linter Errors Found" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          
          # Extract clean error lines from the output
          # Remove ANSI colors and extract file:line:col: error format
          sed 's/\x1b\[[0-9;]*[a-zA-Z]//g' full_output.log | \
          grep -E "^[[:space:]]*/.*\.(js|py|json):[0-9]+:[0-9]+:" | \
          sed 's/^[[:space:]]*//' | \
          sort -u | \
          head -50 >> "$GITHUB_STEP_SUMMARY" 2>/dev/null
          
          # If no errors in that format, try broader search
          if ! grep -q "/.*\.js:[0-9]" "$GITHUB_STEP_SUMMARY" 2>/dev/null; then
            echo "Searching for alternative error formats..." >> "$GITHUB_STEP_SUMMARY"
            sed 's/\x1b\[[0-9;]*[a-zA-Z]//g' full_output.log | \
            grep -E "\.(js|py|json)" | \
            grep -E ":[0-9]+:" | \
            grep -v "INFO\|DEBUG\|Linting\|Found files" | \
            head -20 >> "$GITHUB_STEP_SUMMARY" 2>/dev/null
          fi
          
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - name: 📦 Upload Full Output Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: super-linter-full-output
          path: full_output.log
          if-no-files-found: ignore
