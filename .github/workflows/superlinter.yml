name: Super-Linter
on:
  push:
    paths:
      - '.github/workflows/superlinter.yml'
      - 'library/books.json'
      - 'API-Build/routes/subscribers.js'
  pull_request:
  workflow_dispatch:
jobs:
  super-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: 📁 Print repo structure
        run: tree -L 3
        
      - name: 📄 List all checked out files
        run: find . -type f
        
      - name: 🧹 Run Super-Linter and Capture Output
        continue-on-error: true
        run: |
          # Run Super-Linter and capture all output
          docker run \
            -e DEFAULT_BRANCH=main \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -e VALIDATE_JSON=true \
            -e VALIDATE_PYTHON=true \
            -e VALIDATE_JAVASCRIPT_STANDARD=true \
            -v "${{ github.workspace }}":/tmp/lint \
            ghcr.io/super-linter/super-linter:v7.1.0 > linter_output.txt 2>&1 || true
          
          # Display the output in GitHub Step Summary
          echo "### Code Style Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "This workflow checks code formatting for:" >> "$GITHUB_STEP_SUMMARY"
          echo "- Python" >> "$GITHUB_STEP_SUMMARY"
          echo "- JavaScript" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "#### Linter Results" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          
          # Show errors and warnings from the output
          grep -E "(\.js:|\.py:|\.json:|ERROR|WARN|FAIL)" linter_output.txt | head -100 >> "$GITHUB_STEP_SUMMARY" 2>/dev/null || echo "No linting issues found" >> "$GITHUB_STEP_SUMMARY"
          
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          
      - name: 📦 Upload Linter Output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linter-output
          path: linter_output.txt
          if-no-files-found: ignore
