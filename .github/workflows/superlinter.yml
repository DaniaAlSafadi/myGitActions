name: Super-Linter

on:
  push:
    paths:
      - '.github/workflows/superlinter.yml'
      - 'library/books.json'
      - 'API-Build/routes/subscribers.js'
  pull_request:
  workflow_dispatch:

jobs:
  super-lint:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 📁 Print repo structure
        run: tree -L 3

      - name: 📄 List all checked out files
        run: find . -type f

            - name: 🧹 Run Super-Linter via Docker and Save Logs
        run: |
          docker run \
            -e RUN_LOCAL=true \
            -e DEFAULT_BRANCH=main \
            -e VALIDATE_JSON=true \
            -e VALIDATE_PYTHON=true \
            -e VALIDATE_JAVASCRIPT_STANDARD=true \
            -v ${{ github.workspace }}:/tmp/lint \
            ghcr.io/github/super-linter:slim-v7 > super-linter.log 2>&1

      - name: 📝 Add Super-Linter Markdown Summary
        if: always()
        run: |
          echo "### 🧹 Code Style Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "This workflow checks code formatting for:" >> "$GITHUB_STEP_SUMMARY"
          echo "- Python" >> "$GITHUB_STEP_SUMMARY"
          echo "- JavaScript" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON" >> "$GITHUB_STEP_SUMMARY"

      - name: 📄 Show Linter Errors (if failed)
        if: failure()
        run: |
          echo "### ❌ Linter Errors Found" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "Top 100 lines from super-linter.log:" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          head -n 100 super-linter.log >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - name: 📂 Show Linted Files Extracted from Log
        if: always()
        run: |
          echo "### 📄 Files Scanned by Super-Linter" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          if [ -f super-linter.log ]; then
            grep -Eo '/.*\.(js|py|json):' super-linter.log \
              | sed 's|/github/workspace/||' \
              | sed 's|:$||' \
              | sort | uniq >> "$GITHUB_STEP_SUMMARY"
          else
            echo "super-linter.log not found." >> "$GITHUB_STEP_SUMMARY"
          fi
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - name: 📦 Upload Super-Linter Log as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: super-linter-log
          path: super-linter.log
