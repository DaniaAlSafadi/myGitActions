name: Super-Linter
on:
  push:
  pull_request:
  workflow_dispatch:
permissions:
  contents: read
  checks: write
  pull-requests: write
  security-events: write  # Required for SARIF upload
jobs:
  super-lint:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 📁 Print repo structure
        run: tree -L 3 || echo "tree not installed"
      - name: 📄 List all checked out files
        run: find . -type f
      - name: 🧹 Run Super-Linter
        uses: github/super-linter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVASCRIPT_STANDARD: true
          VALIDATE_PYTHON: true
          VALIDATE_JSON: true
          CREATE_LOG_FILE: true
          LOG_LEVEL: VERBOSE
          NO_COLOR: true
      - name: 📌 Save Linter Errors to Markdown file
        if: always()
        run: |
          if [ -f super-linter.log ]; then
            awk '
              /\[ERROR\]/ {
                if ($0 ~ /Command output:/) {
                  print;
                  inerror=1;
                  dash_count=0;
                  next
                } else {
                  print;
                  next
                }
              }
              inerror {
                if ($0 ~ /\[ERROR\]/) {
                  if ($0 ~ /Command output:/) {
                    print;
                    dash_count=0;
                    next
                  } else {
                    print;
                    inerror=0;
                    next
                  }
                }
                print
                if ($0 ~ /^------$/) {
                  dash_count++
                  if (dash_count == 2) inerror=0
                }
              }
            ' super-linter.log | sed -r "s/\x1B\[[0-9;]*[mK]//g" > super-linter-errors.md
            
            if [ ! -s super-linter-errors.md ]; then
              echo "✅ No lint errors found" > super-linter-errors.md
            fi
          else
            echo "⚠️ super-linter.log not found" > super-linter-errors.md
          fi
      - name: 📝 Generate Step Summary
        if: always()
        run: |
          echo "### Super-Linter Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          
          # Debug: Show what we're looking for
          echo "#### Debug Info" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "Looking for error patterns in super-linter.log:" >> "$GITHUB_STEP_SUMMARY"
          if [ -f super-linter.log ]; then
            echo "File exists. Searching for JAVASCRIPT_STANDARD errors:" >> "$GITHUB_STEP_SUMMARY"
            grep -i "javascript" super-linter.log | grep -i "error" | head -5 >> "$GITHUB_STEP_SUMMARY" || echo "No JavaScript errors found in search" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "super-linter.log file not found" >> "$GITHUB_STEP_SUMMARY"
          fi
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          
          # Add the summary table
          echo "| Language | Validation result |" >> "$GITHUB_STEP_SUMMARY"
          echo "|----------|-------------------|" >> "$GITHUB_STEP_SUMMARY"
          
          # Check JavaScript Standard with multiple patterns
          if [ -f super-linter.log ]; then
            if grep -qi "javascript.*error\|error.*javascript\|ERRORS FOUND in JAVASCRIPT" super-linter.log; then
              echo "| JAVASCRIPT_STANDARD | Fail ❌ |" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "| JAVASCRIPT_STANDARD | Pass ✅ |" >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "| JAVASCRIPT_STANDARD | Unknown ⚠️ |" >> "$GITHUB_STEP_SUMMARY"
          fi
          
          # Check JSON
          if [ -f super-linter.log ]; then
            if grep -qi "json.*error\|error.*json\|ERRORS FOUND in JSON" super-linter.log; then
              echo "| JSON | Fail ❌ |" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "| JSON | Pass ✅ |" >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "| JSON | Unknown ⚠️ |" >> "$GITHUB_STEP_SUMMARY"
          fi
          
          # Check Python
          if [ -f super-linter.log ]; then
            if grep -qi "python.*error\|error.*python\|ERRORS FOUND in PYTHON" super-linter.log; then
              echo "| PYTHON | Fail ❌ |" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "| PYTHON | Pass ✅ |" >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "| PYTHON | Unknown ⚠️ |" >> "$GITHUB_STEP_SUMMARY"
          fi
          
          echo "" >> "$GITHUB_STEP_SUMMARY"
          
          # Add detection message if errors found
          if [ -s super-linter-errors.md ] && ! grep -q "No lint errors found" super-linter-errors.md; then
            echo "Super-linter detected linting errors" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
          fi
          
          echo "#### Code Style Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "This workflow checks code formatting for:" >> "$GITHUB_STEP_SUMMARY"
          echo "- JavaScript" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON" >> "$GITHUB_STEP_SUMMARY"
          echo "- Python" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "#### Extracted Lint Errors" >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          cat super-linter-errors.md >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
      - name: 📦 Upload Super-Linter Errors
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: super-linter-errors
          path: super-linter-errors.md
          if-no-files-found: ignore
