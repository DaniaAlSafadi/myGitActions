name: Super-Linter
on:
  push:
    paths:
      - '.github/workflows/superlinter.yml'
      - 'library/books.json'
      - 'API-Build/routes/subscribers.js'
  pull_request:
  workflow_dispatch:
jobs:
  super-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: 📁 Print repo structure
        run: tree -L 3
        
      - name: 📄 List all checked out files
        run: find . -type f
        
      - name: 🧹 Run Super-Linter
        id: super-linter
        continue-on-error: true
        uses: super-linter/super-linter@v7.1.0
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSON: true
          VALIDATE_PYTHON: true
          VALIDATE_JAVASCRIPT_STANDARD: true
          CREATE_LOG_FILE: true
          
      - name: 📝 Display Clean Linting Errors
        if: always()
        run: |
          echo "### Code Style Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "This workflow checks code formatting for:" >> "$GITHUB_STEP_SUMMARY"
          echo "- Python" >> "$GITHUB_STEP_SUMMARY"
          echo "- JavaScript" >> "$GITHUB_STEP_SUMMARY"
          echo "- JSON" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          
          if [ "${{ steps.super-linter.outcome }}" = "failure" ]; then
            echo "#### ❌ Linter Errors Found" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "#### ✅ No Linting Errors" >> "$GITHUB_STEP_SUMMARY"
          fi
          
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          
          # Extract only clean error lines in the format: /path/file.ext:line:col: message (rule)
          find /tmp /github/workspace -name "*.log" -type f 2>/dev/null | while read logfile; do
            if [ -s "$logfile" ]; then
              # Match the exact format you want
              sed -n 's/.*\(\/[^:]*\.[^:]*:[0-9]*:[0-9]*:.*\)/\1/p' "$logfile" 2>/dev/null | \
              grep -E "\.(js|py|json):[0-9]+:[0-9]+:" | \
              head -50
            fi
          done >> "$GITHUB_STEP_SUMMARY" 2>/dev/null
          
          # Fallback: if no formatted errors, show any line with file:line:col pattern
          if ! grep -q "\.js:[0-9]" "$GITHUB_STEP_SUMMARY" 2>/dev/null; then
            find /tmp /github/workspace -name "*.log" -type f 2>/dev/null | while read logfile; do
              grep -E "\.js:[0-9]+:[0-9]+:|\.py:[0-9]+:[0-9]+:|\.json:[0-9]+:[0-9]+:" "$logfile" 2>/dev/null | head -30
            done >> "$GITHUB_STEP_SUMMARY" 2>/dev/null
          fi
          
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          
      - name: 📦 Upload Super-Linter Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: super-linter-logs
          path: |
            /tmp/lint/
            /github/workspace/*.log
            /tmp/*.log
          if-no-files-found: ignore
